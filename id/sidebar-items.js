initSidebarItems({"mod":[["account_holder","Functionality needed by the account holder, either when interacting with the identity provider, or when interacting with the chain."],["anonymity_revoker","Functionality needed by the anonymity revoker."],["chain","Functionality needed by the chain to verify credential deployments."],["constants","Collection of constants that fix choices, be it values or types, that are used in various places."],["id_proof_types","Types used to represent statements and proofs. A statement is what the user is requested to prove by the verifier. The proofs are for proving properties about the attribute values inside on-chain commitments that account credentials can have. Given the statement and relevant secret data (being the attribute value and the commitment randomness), the user can construct a proof of the statement (if the statement is true)."],["id_prover","This module exposes functions for proving statements about credentials on accounts."],["id_verifier","This module exposes functions for verifying various proofs of statements about a credential on accounts."],["identity_provider","Functionality needed by the identity provider. This gathers together the primitives from the rest of the library into a convenient package."],["range_proof","Re-export of bulletproofs."],["secret_sharing","Implementation of Shamir secret sharing."],["sigma_protocols","Implementations of sigma protocols needed by the identity layer of Concordium."],["types","Main types used in the identity layer, and their serialization implementations."],["utils","A collection of auxiliary functions that donâ€™t belong anywhere else."]]});