(function() {var implementors = {};
implementors["wasm_chain_integration"] = [{"text":"impl&lt;I&gt; <a class=\"trait\" href=\"wasm_transform/machine/trait.Host.html\" title=\"trait wasm_transform::machine::Host\">Host</a>&lt;I&gt; for <a class=\"struct\" href=\"wasm_chain_integration/utils/struct.TrapHost.html\" title=\"struct wasm_chain_integration::utils::TrapHost\">TrapHost</a>","synthetic":false,"types":["wasm_chain_integration::utils::TrapHost"]},{"text":"impl <a class=\"trait\" href=\"wasm_transform/machine/trait.Host.html\" title=\"trait wasm_transform::machine::Host\">Host</a>&lt;<a class=\"struct\" href=\"wasm_transform/artifact/struct.ArtifactNamedImport.html\" title=\"struct wasm_transform::artifact::ArtifactNamedImport\">ArtifactNamedImport</a>&gt; for <a class=\"struct\" href=\"wasm_chain_integration/utils/struct.TestHost.html\" title=\"struct wasm_chain_integration::utils::TestHost\">TestHost</a>","synthetic":false,"types":["wasm_chain_integration::utils::TestHost"]},{"text":"impl&lt;ParamType:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">]</a>&gt;, Ctx:&nbsp;<a class=\"trait\" href=\"wasm_chain_integration/v0/trait.HasInitContext.html\" title=\"trait wasm_chain_integration::v0::HasInitContext\">HasInitContext</a>&gt; <a class=\"trait\" href=\"wasm_transform/machine/trait.Host.html\" title=\"trait wasm_transform::machine::Host\">Host</a>&lt;<a class=\"struct\" href=\"wasm_chain_integration/v0/struct.ProcessedImports.html\" title=\"struct wasm_chain_integration::v0::ProcessedImports\">ProcessedImports</a>&gt; for <a class=\"struct\" href=\"wasm_chain_integration/v0/struct.InitHost.html\" title=\"struct wasm_chain_integration::v0::InitHost\">InitHost</a>&lt;ParamType, Ctx&gt;","synthetic":false,"types":["wasm_chain_integration::v0::InitHost"]},{"text":"impl&lt;ParamType:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">]</a>&gt;, Ctx:&nbsp;<a class=\"trait\" href=\"wasm_chain_integration/v0/trait.HasReceiveContext.html\" title=\"trait wasm_chain_integration::v0::HasReceiveContext\">HasReceiveContext</a>&gt; <a class=\"trait\" href=\"wasm_transform/machine/trait.Host.html\" title=\"trait wasm_transform::machine::Host\">Host</a>&lt;<a class=\"struct\" href=\"wasm_chain_integration/v0/struct.ProcessedImports.html\" title=\"struct wasm_chain_integration::v0::ProcessedImports\">ProcessedImports</a>&gt; for <a class=\"struct\" href=\"wasm_chain_integration/v0/struct.ReceiveHost.html\" title=\"struct wasm_chain_integration::v0::ReceiveHost\">ReceiveHost</a>&lt;ParamType, Ctx&gt;","synthetic":false,"types":["wasm_chain_integration::v0::ReceiveHost"]},{"text":"impl&lt;'a, BackingStore:&nbsp;<a class=\"trait\" href=\"wasm_chain_integration/v1/trie/trait.BackingStoreLoad.html\" title=\"trait wasm_chain_integration::v1::trie::BackingStoreLoad\">BackingStoreLoad</a>, ParamType:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">]</a>&gt;, Ctx:&nbsp;<a class=\"trait\" href=\"wasm_chain_integration/v0/trait.HasInitContext.html\" title=\"trait wasm_chain_integration::v0::HasInitContext\">HasInitContext</a>&gt; <a class=\"trait\" href=\"wasm_transform/machine/trait.Host.html\" title=\"trait wasm_transform::machine::Host\">Host</a>&lt;<a class=\"struct\" href=\"wasm_chain_integration/v1/struct.ProcessedImports.html\" title=\"struct wasm_chain_integration::v1::ProcessedImports\">ProcessedImports</a>&gt; for <a class=\"struct\" href=\"wasm_chain_integration/v1/struct.InitHost.html\" title=\"struct wasm_chain_integration::v1::InitHost\">InitHost</a>&lt;'a, BackingStore, ParamType, Ctx&gt;","synthetic":false,"types":["wasm_chain_integration::v1::InitHost"]},{"text":"impl&lt;'a, BackingStore:&nbsp;<a class=\"trait\" href=\"wasm_chain_integration/v1/trie/trait.BackingStoreLoad.html\" title=\"trait wasm_chain_integration::v1::trie::BackingStoreLoad\">BackingStoreLoad</a>, ParamType:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">]</a>&gt;, Ctx:&nbsp;<a class=\"trait\" href=\"wasm_chain_integration/v1/trait.HasReceiveContext.html\" title=\"trait wasm_chain_integration::v1::HasReceiveContext\">HasReceiveContext</a>&gt; <a class=\"trait\" href=\"wasm_transform/machine/trait.Host.html\" title=\"trait wasm_transform::machine::Host\">Host</a>&lt;<a class=\"struct\" href=\"wasm_chain_integration/v1/struct.ProcessedImports.html\" title=\"struct wasm_chain_integration::v1::ProcessedImports\">ProcessedImports</a>&gt; for <a class=\"struct\" href=\"wasm_chain_integration/v1/struct.ReceiveHost.html\" title=\"struct wasm_chain_integration::v1::ReceiveHost\">ReceiveHost</a>&lt;'a, BackingStore, ParamType, Ctx&gt;","synthetic":false,"types":["wasm_chain_integration::v1::ReceiveHost"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()