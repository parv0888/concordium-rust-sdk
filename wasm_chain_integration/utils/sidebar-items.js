initSidebarItems({"enum":[["ReportError","An auxiliary datatype used by `report_error` to be able to retain the structured information in case we want to use it later to insert proper links to the file, or other formatting."],["WasmVersion",""]],"fn":[["generate_contract_schema_v0","Tries to generate a state schema and schemas for parameters of methods of a V0 contract."],["generate_contract_schema_v1","Tries to generate schemas for parameters and return values of methods for a contract with a V1 schema."],["generate_contract_schema_v2","Tries to generate schemas for parameters and return values of methods for a contract with a V2 schema."],["generate_contract_schema_v3","Tries to generate schemas for events, parameters, return values, and errors of methods for a contract with a V3 schema."],["get_embedded_schema_v0","Get the embedded schema for smart contract modules version 0 if it exists."],["get_embedded_schema_v1","Get the embedded schema for smart contract modules version 1 if it exists."],["get_inits","Get the init methods of the module."],["get_receives","Get the receive methods of the module."],["run_module_tests","Instantiates the module with an external function to report back errors and a seed that is used to instantiate a RNG for randomized testing. Then tries to run exported test-functions, which are present if compiled with the wasm-test feature."]],"struct":[["TestHost","A host which traps for any function call apart from `report_error` which it prints to standard out and `get_random` that calls a random number generator."],["TrapHost","A host which traps for any function call."]]});